# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-13 10:49
from __future__ import unicode_literals

import autoslug.fields
import colorful.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import proposals.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('planning', '0001_initial'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, default='', max_length=64)),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home', models.TextField(blank=True, default='')),
                ('venue', models.TextField(blank=True, default='')),
                ('city', models.CharField(blank=True, default='', max_length=64)),
                ('subscriptions_open', models.BooleanField(default=False)),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('duration', models.PositiveIntegerField(default=0, verbose_name='Default duration (min)')),
                ('color', colorful.fields.RGBColorField(default='#ffffff', verbose_name='Color on program')),
                ('label', models.CharField(blank=True, default='', max_length=64, verbose_name='Label on program')),
                ('opening_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('closing_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='After submission, title can only be changed by the staff.', max_length=128, verbose_name='Title')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('abstract', models.CharField(blank=True, max_length=255, verbose_name='Abstract')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('accepted', models.NullBooleanField(default=None)),
                ('start_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('duration', models.PositiveIntegerField(default=0, verbose_name='Duration (min)')),
                ('plenary', models.BooleanField(default=False)),
                ('registration_required', models.BooleanField(default=False)),
                ('attendees_limit', models.PositiveIntegerField(default=0, verbose_name='Max. number of attendees')),
                ('materials', models.FileField(help_text='You can use this field to share some materials related to your intervention.', null=True, upload_to=proposals.models.talk_materials_destination, verbose_name='Materials')),
                ('attendees', models.ManyToManyField(to='proposals.Attendee', verbose_name='Attendees')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proposals.Event', verbose_name='Intervention kind')),
                ('proposer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='planning.Room')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
                ('speakers', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Speakers')),
            ],
            options={
                'ordering': ('event__id',),
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('reviewers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Reviewers')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('managers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Managers')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('vote', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(-2), django.core.validators.MaxValueValidator(2)])),
                ('talk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proposals.Talk')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='topic',
            name='track',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proposals.Track', verbose_name='Destination track'),
        ),
        migrations.AddField(
            model_name='talk',
            name='topics',
            field=models.ManyToManyField(blank=True, help_text='The topics can not be changed after submission.', to='proposals.Topic', verbose_name='Topics'),
        ),
        migrations.AddField(
            model_name='talk',
            name='track',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proposals.Track', verbose_name='Track'),
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together=set([('talk', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='track',
            unique_together=set([('site', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='topic',
            unique_together=set([('site', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='event',
            unique_together=set([('site', 'name')]),
        ),
    ]
